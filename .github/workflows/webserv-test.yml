name: webserv test
on: [push]
env:
  BUILD_PARALLEL: 16
  SLEEP_BEFORE_TEST: 5
  TEST_DIR: tests_build
  TEST_BIN: webserv-test
  RELEASE_BIN: webserv
  DEBUG_BIN: debug

jobs:
  make-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - run: mkdir -p ./${{ env.TEST_DIR }}
      - run: cd ./${{ env.TEST_DIR }} && cmake ..
      - run: make -C ./${{ env.TEST_DIR }} -j${{ env.BUILD_PARALLEL }}
      - run: ./${{ env.TEST_DIR }}/${{ env.TEST_BIN }} --gtest_color=yes

  build-release:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v4
      - run: make -j${{ env.BUILD_PARALLEL }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.RELEASE_BIN }}-${{ matrix.os }}
          path: ${{ env.RELEASE_BIN }}
  build-debug:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v4
      - run: make ${{ env.DEBUG_BIN }} -j${{ env.BUILD_PARALLEL }}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.DEBUG_BIN }}-${{ matrix.os }}
          path: ${{ env.DEBUG_BIN }}

  test-python-http:
    needs:
      - build-release
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            test-ci
            resources
            logs
            webserv.yaml
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.RELEASE_BIN }}-${{ matrix.os }}
      - run: chmod +x ./${{ env.RELEASE_BIN }}
      # `500` という数字はtimeoutMsでしか使用していないため、面倒なのでこのような指定にしている
      - run: sed 's/500/5000/g' < ./webserv.yaml > config.yaml
      - run: sudo ./${{ env.RELEASE_BIN }} config.yaml 2> webserv.log &
        id: exec-webserv
      - run: sleep ${{ env.SLEEP_BEFORE_TEST }}
      - run: python3 test-ci/http-test.py
      - if: always() &&  steps.exec-webserv.outcome == 'success'
        run: sudo kill $(pgrep ${{ env.RELEASE_BIN }})
        continue-on-error: true
      - if: always() &&  steps.exec-webserv.outcome == 'success'
        run: cat webserv.log
        continue-on-error: true

  debug-test-python-http:
    needs:
      - build-debug
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            test-ci
            resources
            logs
            webserv.yaml
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.DEBUG_BIN }}-${{ matrix.os }}
      - run: chmod +x ./${{ env.DEBUG_BIN }}
      # `500` という数字はtimeoutMsでしか使用していないため、面倒なのでこのような指定にしている
      - run: sed 's/500/5000/g' < ./webserv.yaml > config.yaml
      - run: sudo ./${{ env.DEBUG_BIN }} config.yaml &
        id: exec-webserv
      - run: sleep ${{ env.SLEEP_BEFORE_TEST }}
      - run: python3 test-ci/http-test.py
      - if: always() && steps.exec-webserv.outcome == 'success'
        name: Find latest log file
        id: latest-log
        run: echo "file=$(ls -t logs | head -n 1)" >> $GITHUB_OUTPUT
        continue-on-error: true
      - if: always() && steps.exec-webserv.outcome == 'success'
        run: sudo kill $(cat debug.pid)
        continue-on-error: true
      - if: always() && steps.exec-webserv.outcome == 'success'
        run: cat logs/${{ steps.latest-log.outputs.file }}
      - if: always() && steps.exec-webserv.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: debug-${{ matrix.os }}-log
          path: logs/${{ steps.latest-log.outputs.file }}

  test-python-http-leaks:
    needs:
      - build-release
    runs-on: macos-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            test-ci
            resources
            logs
            webserv.yaml
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.RELEASE_BIN }}-macos-latest
      - run: chmod +x ./${{ env.RELEASE_BIN }}
      # `500` という数字はtimeoutMsでしか使用していないため、面倒なのでこのような指定にしている
      - run: sed 's/500/5000/g' < ./webserv.yaml > config.yaml
      - run: leaks -q --atExit -- ./${{ env.RELEASE_BIN }} config.yaml > webserv.log 2> leaks.log &
        id: exec-webserv
      - run: sleep ${{ env.SLEEP_BEFORE_TEST }}
      - run: python3 test-ci/http-test.py
      - if: always() &&  steps.exec-webserv.outcome == 'success'
        run: kill $(pgrep ${{ env.RELEASE_BIN }})
        continue-on-error: true
      - if: always() &&  steps.exec-webserv.outcome == 'success'
        run: cat webserv.log
        continue-on-error: true
      - if: always() &&  steps.exec-webserv.outcome == 'success'
        run: cat leaks.log
        continue-on-error: true
