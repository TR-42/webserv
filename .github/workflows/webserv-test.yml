name: webserv test
on: [push]
env:
  BUILD_PARALLEL: 16
  SLEEP_BEFORE_TEST: 5

jobs:
  make-test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - run: make test

  test-python-http:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - run: make -j${{ env.BUILD_PARALLEL }}
      - run: ./webserv &
        id: exec-webserv
      - run: sleep ${{ env.SLEEP_BEFORE_TEST }}
      - run: python3 test-ci/http-test.py
        continue-on-error: true
      - if: steps.exec-webserv.outcome == 'success'
        name: Find latest log file
        id: latest-log
        run: echo "::set-output name=file::$(ls -t logs | head -n 1)"
      - if: steps.exec-webserv.outcome == 'success'
        run: kill $(pgrep webserv)
      - if: steps.exec-webserv.outcome == 'success'
        run: cat logs/${{ steps.latest-log.outputs.file }}
      - if: steps.exec-webserv.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: webserv-${{ matrix.os }}-log
          path: logs/${{ steps.latest-log.outputs.file }}

  debug-test-python-http:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - run: make debug -j${{ env.BUILD_PARALLEL }}
      - run: ./debug &
        id: exec-webserv
      - run: sleep ${{ env.SLEEP_BEFORE_TEST }}
      - run: python3 test-ci/http-test.py
        continue-on-error: true
      - if: steps.exec-webserv.outcome == 'success'
        name: Find latest log file
        id: latest-log
        run: echo "::set-output name=file::$(ls -t logs | head -n 1)"
      - if: steps.exec-webserv.outcome == 'success'
        run: kill $(cat debug.pid)
      - if: steps.exec-webserv.outcome == 'success'
        run: cat logs/${{ steps.latest-log.outputs.file }}
      - if: steps.exec-webserv.outcome == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: debug-${{ matrix.os }}-log
          path: logs/${{ steps.latest-log.outputs.file }}
